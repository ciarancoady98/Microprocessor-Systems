


ARM Macro Assembler    Page 1 


    1 00000000         ; Definitions  -- references to 'UM' are to the User Man
                       ual.
    2 00000000         
    3 00000000         ; Timer Stuff -- UM, Table 173
    4 00000000         
    5 00000000 E0004000 
                       T0      equ              0xE0004000  ; Timer 0 Base Addr
                                                            ess
    6 00000000 E0008000 
                       T1      equ              0xE0008000
    7 00000000         
    8 00000000 00000000 
                       IR      equ              0           ; Add this to a tim
                                                            er's base address t
                                                            o get actual regist
                                                            er address
    9 00000000 00000004 
                       TCR     equ              4
   10 00000000 00000014 
                       MCR     equ              0x14
   11 00000000 00000018 
                       MR0     equ              0x18
   12 00000000         
   13 00000000 00000002 
                       TimerCommandReset
                               equ              2
   14 00000000 00000001 
                       TimerCommandRun
                               equ              1
   15 00000000 00000003 
                       TimerModeResetAndInterrupt
                               equ              3
   16 00000000 00000001 
                       TimerResetTimer0Interrupt
                               equ              1
   17 00000000 000000FF 
                       TimerResetAllInterrupts
                               equ              0xFF
   18 00000000         
   19 00000000         ; VIC Stuff -- UM, Table 41
   20 00000000 FFFFF000 
                       VIC     equ              0xFFFFF000  ; VIC Base Address
   21 00000000 00000010 
                       IntEnable
                               equ              0x10
   22 00000000 00000030 
                       VectAddr
                               equ              0x30
   23 00000000 00000100 
                       VectAddr0
                               equ              0x100
   24 00000000 00000200 
                       VectCtrl0
                               equ              0x200
   25 00000000         
   26 00000000 00000004 
                       Timer0ChannelNumber
                               equ              4           ; UM, Table 63
   27 00000000 00000010 



ARM Macro Assembler    Page 2 


                       Timer0Mask
                               equ              1<<Timer0ChannelNumber 
                                                            ; UM, Table 63
   28 00000000 00000005 
                       IRQslot_en
                               equ              5           ; UM, Table 58
   29 00000000         
   30 00000000 E0028008 
                       IO0DIR  EQU              0xE0028008
   31 00000000 E0028004 
                       IO0SET  EQU              0XE0028004
   32 00000000 E002800C 
                       IO0CLR  EQU              0XE002800C
   33 00000000 E0028000 
                       IO0PIN  EQU              0XE0028000
   34 00000000         
   35 00000000         
   36 00000000                 AREA             InitialisationAndMain, CODE, RE
ADONLY
   37 00000000                 IMPORT           main
   38 00000000         
   39 00000000         ; (c) Mike Brady, 2014 -- 2019.
   40 00000000         
   41 00000000                 EXPORT           start
   42 00000000         start
   43 00000000         ; initialisation code
   44 00000000         ;initialising the LED
   45 00000000 E59F110C        ldr              r1,=IO0DIR
   46 00000004 E3A06826        ldr              r6,=0x00260000 ; select P0.21--
                                                            P0.18 --P0.17
   47 00000008 E5816000        str              r6,[r1]     ; make them outputs
                                                            
   48 0000000C E59F1104        ldr              r1,=IO0SET
   49 00000010 E5816000        str              r6,[r1]     ; CLR them to turn 
                                                            the LEDs ON
   50 00000014         
   51 00000014 E59F2100        ldr              r2,=IO0CLR
   52 00000018 E3A03802        ldr              r3, =0x00020000
   53 0000001C E5823000        str              r3, [r2]
   54 00000020 E3A0C001        ldr              r12, =1     ; lights
   55 00000024         
   56 00000024         ; Initialise the VIC
   57 00000024 E59F00F4        ldr              r0,=VIC     ; looking at you, V
                                                            IC!
   58 00000028         
   59 00000028 E59F10F4        ldr              r1,=irqhan
   60 0000002C E5801100        str              r1,[r0,#VectAddr0] ; associate 
                                                            our interrupt handl
                                                            er with Vectored In
                                                            terrupt 0
   61 00000030         
   62 00000030 E3A01024        mov              r1,#Timer0ChannelNumber+(1<<IRQ
slot_en)
   63 00000034 E5801200        str              r1,[r0,#VectCtrl0] ; make Timer
                                                             0 interrupts the s
                                                            ource of Vectored I
                                                            nterrupt 0
   64 00000038         
   65 00000038 E3A01010        mov              r1,#Timer0Mask



ARM Macro Assembler    Page 3 


   66 0000003C E5801010        str              r1,[r0,#IntEnable] ; enable Tim
                                                            er 0 interrupts to 
                                                            be recognised by th
                                                            e VIC
   67 00000040         
   68 00000040 E3A01000        mov              r1,#0
   69 00000044 E5801030        str              r1,[r0,#VectAddr] ; remove any 
                                                            pending interrupt (
                                                            may not be needed)
   70 00000048         
   71 00000048         ; Initialise Timer 0
   72 00000048 E59F00D8        ldr              r0,=T0      ; looking at you, T
                                                            imer 0!
   73 0000004C         
   74 0000004C E3A01002        mov              r1,#TimerCommandReset
   75 00000050 E5801004        str              r1,[r0,#TCR]
   76 00000054         
   77 00000054 E3A010FF        mov              r1,#TimerResetAllInterrupts
   78 00000058 E5801000        str              r1,[r0,#IR]
   79 0000005C         
   80 0000005C E59F10C8        ldr              r1,=(14745600/200)-1 ; 5 ms = 1
                                                            /200 second
   81 00000060 E5801018        str              r1,[r0,#MR0]
   82 00000064         
   83 00000064 E3A01003        mov              r1,#TimerModeResetAndInterrupt
   84 00000068 E5801014        str              r1,[r0,#MCR]
   85 0000006C         
   86 0000006C E3A01001        mov              r1,#TimerCommandRun
   87 00000070 E5801004        str              r1,[r0,#TCR]
   88 00000074         
   89 00000074         ;from here, initialisation is finished, so it should be 
                       the main body of the main program
   90 00000074         
   91 00000074         wloop
   92 00000074 E59F20B4        LDR              R2, = LIGHTS
   93 00000078 E5922000        LDR              R2, [R2]
   94 0000007C E35200C8        CMP              R2, #200
   95 00000080 1AFFFFFB        BNE              wloop
   96 00000084 E59F30A8        LDR              R3,=IO0PIN
   97 00000088 E5933000        LDR              R3, [R3]
   98 0000008C E1E03003        MVN              R3, R3
   99 00000090 E2033826        AND              R3, R3, #0X00260000
  100 00000094 E3530802        CMP              R3, #0x00020000
  101 00000098 0A000004        BEQ              redToGreen
  102 0000009C E3530701        CMP              R3, #0x00040000
  103 000000A0 0A000009        BEQ              blueToRed
  104 000000A4 E3530602        CMP              R3, #0X00200000
  105 000000A8 0A00000E        BEQ              greenToBlue
  106 000000AC EA000014        B                wend
  107 000000B0         
  108 000000B0         redToGreen
  109 000000B0 E59F3060        LDR              R3, =IO0SET
  110 000000B4 E3A04826        LDR              R4, =0X00260000
  111 000000B8 E5834000        STR              R4, [R3]    ; turn all leds off
                                                            
  112 000000BC E59F3058        LDR              R3, =IO0CLR
  113 000000C0 E3A04602        LDR              R4,=0X00200000
  114 000000C4 E5834000        STR              R4, [R3]    ; turn on green lig
                                                            ht



ARM Macro Assembler    Page 4 


  115 000000C8 EA00000D        B                wend
  116 000000CC         
  117 000000CC         blueToRed
  118 000000CC E59F3044        LDR              R3, =IO0SET
  119 000000D0 E3A04826        LDR              R4, =0X00260000
  120 000000D4 E5834000        STR              R4, [R3]    ; turn all leds off
                                                            
  121 000000D8 E59F303C        LDR              R3, =IO0CLR
  122 000000DC E3A04802        LDR              R4,=0X00020000
  123 000000E0 E5834000        STR              R4, [R3]    ; turn on red light
                                                            
  124 000000E4 EA000006        B                wend
  125 000000E8         
  126 000000E8         greenToBlue
  127 000000E8 E59F3028        LDR              R3, =IO0SET
  128 000000EC E3A04826        LDR              R4, =0X00260000
  129 000000F0 E5834000        STR              R4, [R3]    ; turn all leds off
                                                            
  130 000000F4 E59F3020        LDR              R3, =IO0CLR
  131 000000F8 E3A04701        LDR              R4,=0X00040000
  132 000000FC E5834000        STR              R4, [R3]    ; turn on blue ligh
                                                            t
  133 00000100 EAFFFFFF        B                wend
  134 00000104         
  135 00000104         wend
  136 00000104 E3A03000        LDR              R3, =0
  137 00000108 E59F2020        LDR              R2, =LIGHTS
  138 0000010C E5823000        STR              R3, [R2]    ; reset mem address
                                                             lights
  139 00000110 EAFFFFD7        b                wloop       ; branch always
  140 00000114         ;main program execution will never drop below the statem
                       ent above.
  141 00000114         
  142 00000114 E0028008 
              E0028004 
              E002800C 
              FFFFF000 
              00000000 
              E0004000 
              00011FFF 
              00000000 
              E0028000 
              00000000         AREA             InterruptStuff, CODE, READONLY
  143 00000000 E24EE004 
                       irqhan  sub              lr,lr,#4
  144 00000004 E92D4003        stmfd            sp!,{r0-r1,lr} ; the lr will be
                                                             restored to the pc
                                                            
  145 00000008         
  146 00000008         ;this is the body of the interrupt handler
  147 00000008         
  148 00000008         ;here you'd put the unique part of your interrupt handle
                       r
  149 00000008         ;all the other stuff is "housekeeping" to save registers
                        and acknowledge interrupts
  150 00000008         
  151 00000008 E59F1024        LDR              R1, =LIGHTS ; load address of l
                                                            ights
  152 0000000C E5910000        LDR              R0, [R1]



ARM Macro Assembler    Page 5 


  153 00000010 E2800001        ADD              R0, R0, #1
  154 00000014 E5810000        STR              R0, [R1]    ;store 1 in lights 
                                                            address
  155 00000018         
  156 00000018         ;this is where we stop the timer from making the interru
                       pt request to the VIC
  157 00000018         ;i.e. we 'acknowledge' the interrupt
  158 00000018 E59F0018        ldr              r0,=T0
  159 0000001C E3A01001        mov              r1,#TimerResetTimer0Interrupt
  160 00000020 E5801000        str              r1,[r0,#IR] ; remove MR0 interr
                                                            upt request from ti
                                                            mer
  161 00000024         
  162 00000024         ;here we stop the VIC from making the interrupt request 
                       to the CPU:
  163 00000024 E59F0010        ldr              r0,=VIC
  164 00000028 E3A01000        mov              r1,#0
  165 0000002C E5801030        str              r1,[r0,#VectAddr] ; reset VIC
  166 00000030         
  167 00000030 E8FD8003        ldmfd            sp!,{r0-r1,pc}^ ; return from i
                                                            nterrupt, restoring
                                                             pc from lr
  168 00000034         ; and also restoring the CPSR
  169 00000034         
  170 00000034         
  171 00000034         
  172 00000034 00000000 
              E0004000 
              FFFFF000         AREA             lights,READWRITE
  173 00000000 00000000 
                       LIGHTS  DCD              0
  174 00000004                 END
Command Line: --debug --xref --diag_suppress=9931 --apcs=interwork --depend=.\a
pp.d -o.\app.o -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Ke
il_v5\ARM\Inc\Philips --predefine="__EVAL SETA 1" --predefine="__MICROLIB SETA 
1" --predefine="__UVISION_VERSION SETA 516" --list=.\listings\app.lst App.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

InitialisationAndMain 00000000

Symbol: InitialisationAndMain
   Definitions
      At line 36 in file App.s
   Uses
      None
Comment: InitialisationAndMain unused
blueToRed 000000CC

Symbol: blueToRed
   Definitions
      At line 117 in file App.s
   Uses
      At line 103 in file App.s
Comment: blueToRed used once
greenToBlue 000000E8

Symbol: greenToBlue
   Definitions
      At line 126 in file App.s
   Uses
      At line 105 in file App.s
Comment: greenToBlue used once
redToGreen 000000B0

Symbol: redToGreen
   Definitions
      At line 108 in file App.s
   Uses
      At line 101 in file App.s
Comment: redToGreen used once
start 00000000

Symbol: start
   Definitions
      At line 42 in file App.s
   Uses
      At line 41 in file App.s
Comment: start used once
wend 00000104

Symbol: wend
   Definitions
      At line 135 in file App.s
   Uses
      At line 106 in file App.s
      At line 115 in file App.s
      At line 124 in file App.s
      At line 133 in file App.s

wloop 00000074

Symbol: wloop
   Definitions
      At line 91 in file App.s
   Uses
      At line 95 in file App.s
      At line 139 in file App.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols


7 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

InterruptStuff 00000000

Symbol: InterruptStuff
   Definitions
      At line 142 in file App.s
   Uses
      None
Comment: InterruptStuff unused
irqhan 00000000

Symbol: irqhan
   Definitions
      At line 143 in file App.s
   Uses
      At line 59 in file App.s
Comment: irqhan used once
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

LIGHTS 00000000

Symbol: LIGHTS
   Definitions
      At line 173 in file App.s
   Uses
      At line 92 in file App.s
      At line 137 in file App.s
      At line 151 in file App.s

lights 00000000

Symbol: lights
   Definitions
      At line 172 in file App.s
   Uses
      None
Comment: lights unused
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

IO0CLR E002800C

Symbol: IO0CLR
   Definitions
      At line 32 in file App.s
   Uses
      At line 51 in file App.s
      At line 112 in file App.s
      At line 121 in file App.s
      At line 130 in file App.s

IO0DIR E0028008

Symbol: IO0DIR
   Definitions
      At line 30 in file App.s
   Uses
      At line 45 in file App.s
Comment: IO0DIR used once
IO0PIN E0028000

Symbol: IO0PIN
   Definitions
      At line 33 in file App.s
   Uses
      At line 96 in file App.s
Comment: IO0PIN used once
IO0SET E0028004

Symbol: IO0SET
   Definitions
      At line 31 in file App.s
   Uses
      At line 48 in file App.s
      At line 109 in file App.s
      At line 118 in file App.s
      At line 127 in file App.s

IR 00000000

Symbol: IR
   Definitions
      At line 8 in file App.s
   Uses
      At line 78 in file App.s
      At line 160 in file App.s

IRQslot_en 00000005

Symbol: IRQslot_en
   Definitions
      At line 28 in file App.s
   Uses
      At line 62 in file App.s
Comment: IRQslot_en used once
IntEnable 00000010

Symbol: IntEnable
   Definitions



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

      At line 21 in file App.s
   Uses
      At line 66 in file App.s
Comment: IntEnable used once
MCR 00000014

Symbol: MCR
   Definitions
      At line 10 in file App.s
   Uses
      At line 84 in file App.s
Comment: MCR used once
MR0 00000018

Symbol: MR0
   Definitions
      At line 11 in file App.s
   Uses
      At line 81 in file App.s
Comment: MR0 used once
T0 E0004000

Symbol: T0
   Definitions
      At line 5 in file App.s
   Uses
      At line 72 in file App.s
      At line 158 in file App.s

T1 E0008000

Symbol: T1
   Definitions
      At line 6 in file App.s
   Uses
      None
Comment: T1 unused
TCR 00000004

Symbol: TCR
   Definitions
      At line 9 in file App.s
   Uses
      At line 75 in file App.s
      At line 87 in file App.s

Timer0ChannelNumber 00000004

Symbol: Timer0ChannelNumber
   Definitions
      At line 26 in file App.s
   Uses
      At line 27 in file App.s
      At line 62 in file App.s

Timer0Mask 00000010

Symbol: Timer0Mask
   Definitions



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

      At line 27 in file App.s
   Uses
      At line 65 in file App.s
Comment: Timer0Mask used once
TimerCommandReset 00000002

Symbol: TimerCommandReset
   Definitions
      At line 13 in file App.s
   Uses
      At line 74 in file App.s
Comment: TimerCommandReset used once
TimerCommandRun 00000001

Symbol: TimerCommandRun
   Definitions
      At line 14 in file App.s
   Uses
      At line 86 in file App.s
Comment: TimerCommandRun used once
TimerModeResetAndInterrupt 00000003

Symbol: TimerModeResetAndInterrupt
   Definitions
      At line 15 in file App.s
   Uses
      At line 83 in file App.s
Comment: TimerModeResetAndInterrupt used once
TimerResetAllInterrupts 000000FF

Symbol: TimerResetAllInterrupts
   Definitions
      At line 17 in file App.s
   Uses
      At line 77 in file App.s
Comment: TimerResetAllInterrupts used once
TimerResetTimer0Interrupt 00000001

Symbol: TimerResetTimer0Interrupt
   Definitions
      At line 16 in file App.s
   Uses
      At line 159 in file App.s
Comment: TimerResetTimer0Interrupt used once
VIC FFFFF000

Symbol: VIC
   Definitions
      At line 20 in file App.s
   Uses
      At line 57 in file App.s
      At line 163 in file App.s

VectAddr 00000030

Symbol: VectAddr
   Definitions
      At line 22 in file App.s
   Uses



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Absolute symbols

      At line 69 in file App.s
      At line 165 in file App.s

VectAddr0 00000100

Symbol: VectAddr0
   Definitions
      At line 23 in file App.s
   Uses
      At line 60 in file App.s
Comment: VectAddr0 used once
VectCtrl0 00000200

Symbol: VectCtrl0
   Definitions
      At line 24 in file App.s
   Uses
      At line 63 in file App.s
Comment: VectCtrl0 used once
23 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

main 00000000

Symbol: main
   Definitions
      At line 37 in file App.s
   Uses
      None
Comment: main unused
1 symbol
372 symbols in table
