


ARM Macro Assembler    Page 1 


    1 00000000         ; Definitions  -- references to 'UM' are to the User Man
                       ual.
    2 00000000         
    3 00000000         ; Timer Stuff -- UM, Table 173
    4 00000000         
    5 00000000 E0004000 
                       T0      equ              0xE0004000  ; Timer 0 Base Addr
                                                            ess
    6 00000000 E0008000 
                       T1      equ              0xE0008000
    7 00000000         
    8 00000000 00000000 
                       IR      equ              0           ; Add this to a tim
                                                            er's base address t
                                                            o get actual regist
                                                            er address
    9 00000000 00000004 
                       TCR     equ              4
   10 00000000 00000014 
                       MCR     equ              0x14
   11 00000000 00000018 
                       MR0     equ              0x18
   12 00000000         
   13 00000000 00000002 
                       TimerCommandReset
                               equ              2
   14 00000000 00000001 
                       TimerCommandRun
                               equ              1
   15 00000000 00000003 
                       TimerModeResetAndInterrupt
                               equ              3
   16 00000000 00000001 
                       TimerResetTimer0Interrupt
                               equ              1
   17 00000000 000000FF 
                       TimerResetAllInterrupts
                               equ              0xFF
   18 00000000         
   19 00000000         ; VIC Stuff -- UM, Table 41
   20 00000000 FFFFF000 
                       VIC     equ              0xFFFFF000  ; VIC Base Address
   21 00000000 00000010 
                       IntEnable
                               equ              0x10
   22 00000000 00000030 
                       VectAddr
                               equ              0x30
   23 00000000 00000100 
                       VectAddr0
                               equ              0x100
   24 00000000 00000200 
                       VectCtrl0
                               equ              0x200
   25 00000000         
   26 00000000 00000004 
                       Timer0ChannelNumber
                               equ              4           ; UM, Table 63
   27 00000000 00000010 



ARM Macro Assembler    Page 2 


                       Timer0Mask
                               equ              1<<Timer0ChannelNumber 
                                                            ; UM, Table 63
   28 00000000 00000005 
                       IRQslot_en
                               equ              5           ; UM, Table 58
   29 00000000         
   30 00000000 E0028008 
                       IO0DIR  EQU              0xE0028008
   31 00000000 E0028004 
                       IO0SET  EQU              0XE0028004
   32 00000000 E002800C 
                       IO0CLR  EQU              0XE002800C
   33 00000000 E0028000 
                       IOPIN   EQU              0XE0028000
   34 00000000         
   35 00000000         
   36 00000000                 AREA             InitialisationAndMain, CODE, RE
ADONLY
   37 00000000                 IMPORT           main
   38 00000000         
   39 00000000         ; (c) Mike Brady, 2014 -- 2019.
   40 00000000         
   41 00000000                 EXPORT           start
   42 00000000         start
   43 00000000         ; initialisation code
   44 00000000         ;initialising the LED
   45 00000000 E59F1064        ldr              r1,=IO0DIR
   46 00000004 E3A06813        ldr              r6,=0x00130000 ; select P0.21--
                                                            P0.18 --P0.17
   47 00000008 E5816000        str              r6,[r1]     ; make them outputs
                                                            
   48 0000000C E59F105C        ldr              r1,=IO0CLR
   49 00000010 E5816000        str              r6,[r1]     ; set them to turn 
                                                            the LEDs ON
   50 00000014 E59F2058        ldr              r2,=IO0SET
   51 00000018         
   52 00000018         
   53 00000018         ; Initialise the VIC
   54 00000018 E59F0058        ldr              r0,=VIC     ; looking at you, V
                                                            IC!
   55 0000001C         
   56 0000001C E59F1058        ldr              r1,=irqhan
   57 00000020 E5801100        str              r1,[r0,#VectAddr0] ; associate 
                                                            our interrupt handl
                                                            er with Vectored In
                                                            terrupt 0
   58 00000024         
   59 00000024 E3A01024        mov              r1,#Timer0ChannelNumber+(1<<IRQ
slot_en)
   60 00000028 E5801200        str              r1,[r0,#VectCtrl0] ; make Timer
                                                             0 interrupts the s
                                                            ource of Vectored I
                                                            nterrupt 0
   61 0000002C         
   62 0000002C E3A01010        mov              r1,#Timer0Mask
   63 00000030 E5801010        str              r1,[r0,#IntEnable] ; enable Tim
                                                            er 0 interrupts to 
                                                            be recognised by th



ARM Macro Assembler    Page 3 


                                                            e VIC
   64 00000034         
   65 00000034 E3A01000        mov              r1,#0
   66 00000038 E5801030        str              r1,[r0,#VectAddr] ; remove any 
                                                            pending interrupt (
                                                            may not be needed)
   67 0000003C         
   68 0000003C         ; Initialise Timer 0
   69 0000003C E59F003C        ldr              r0,=T0      ; looking at you, T
                                                            imer 0!
   70 00000040         
   71 00000040 E3A01002        mov              r1,#TimerCommandReset
   72 00000044 E5801004        str              r1,[r0,#TCR]
   73 00000048         
   74 00000048 E3A010FF        mov              r1,#TimerResetAllInterrupts
   75 0000004C E5801000        str              r1,[r0,#IR]
   76 00000050         
   77 00000050 E59F102C        ldr              r1,=(14745600/200)-1 ; 5 ms = 1
                                                            /200 second
   78 00000054 E5801018        str              r1,[r0,#MR0]
   79 00000058         
   80 00000058 E3A01003        mov              r1,#TimerModeResetAndInterrupt
   81 0000005C E5801014        str              r1,[r0,#MCR]
   82 00000060         
   83 00000060 E3A01001        mov              r1,#TimerCommandRun
   84 00000064 E5801004        str              r1,[r0,#TCR]
   85 00000068         
   86 00000068         ;from here, initialisation is finished, so it should be 
                       the main body of the main program
   87 00000068         
   88 00000068 EAFFFFFE 
                       wloop   b                wloop       ; branch always
   89 0000006C         ;main program execution will never drop below the statem
                       ent above.
   90 0000006C         
   91 0000006C E0028008 
              E002800C 
              E0028004 
              FFFFF000 
              00000000 
              E0004000 
              00011FFF         AREA             InterruptStuff, CODE, READONLY
   92 00000000 E24EE004 
                       irqhan  sub              lr,lr,#4
   93 00000004 E92D4003        stmfd            sp!,{r0-r1,lr} ; the lr will be
                                                             restored to the pc
                                                            
   94 00000008         
   95 00000008         ;this is the body of the interrupt handler
   96 00000008         
   97 00000008         ;here you'd put the unique part of your interrupt handle
                       r
   98 00000008         ;all the other stuff is "housekeeping" to save registers
                        and acknowledge interrupts
   99 00000008 E3A00001        LDR              R0, =1      ; set lights value 
                                                            to 1
  100 0000000C E59F101C        LDR              R1, =LIGHTS ; load address of l
                                                            ights
  101 00000010 E5810000        STR              R0, [R1]    ;store 1 in lights 



ARM Macro Assembler    Page 4 


                                                            address
  102 00000014         
  103 00000014         ;this is where we stop the timer from making the interru
                       pt request to the VIC
  104 00000014         ;i.e. we 'acknowledge' the interrupt
  105 00000014 E59F0018        ldr              r0,=T0
  106 00000018 E3A01001        mov              r1,#TimerResetTimer0Interrupt
  107 0000001C E5801000        str              r1,[r0,#IR] ; remove MR0 interr
                                                            upt request from ti
                                                            mer
  108 00000020         
  109 00000020         ;here we stop the VIC from making the interrupt request 
                       to the CPU:
  110 00000020 E59F0010        ldr              r0,=VIC
  111 00000024 E3A01000        mov              r1,#0
  112 00000028 E5801030        str              r1,[r0,#VectAddr] ; reset VIC
  113 0000002C         
  114 0000002C E8FD8003        ldmfd            sp!,{r0-r1,pc}^ ; return from i
                                                            nterrupt, restoring
                                                             pc from lr
  115 00000030         ; and also restoring the CPSR
  116 00000030         
  117 00000030         
  118 00000030         
  119 00000030 00000000 
              E0004000 
              FFFFF000         AREA             lights,READWRITE
  120 00000000 00      LIGHTS  space            1
  121 00000001                 END
Command Line: --debug --xref --diag_suppress=9931 --apcs=interwork --depend=.\a
pp.d -o.\app.o -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Ke
il_v5\ARM\Inc\Philips --predefine="__EVAL SETA 1" --predefine="__MICROLIB SETA 
1" --predefine="__UVISION_VERSION SETA 516" --list=.\listings\app.lst App.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

InitialisationAndMain 00000000

Symbol: InitialisationAndMain
   Definitions
      At line 36 in file App.s
   Uses
      None
Comment: InitialisationAndMain unused
start 00000000

Symbol: start
   Definitions
      At line 42 in file App.s
   Uses
      At line 41 in file App.s
Comment: start used once
wloop 00000068

Symbol: wloop
   Definitions
      At line 88 in file App.s
   Uses
      At line 88 in file App.s
Comment: wloop used once
3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

InterruptStuff 00000000

Symbol: InterruptStuff
   Definitions
      At line 91 in file App.s
   Uses
      None
Comment: InterruptStuff unused
irqhan 00000000

Symbol: irqhan
   Definitions
      At line 92 in file App.s
   Uses
      At line 56 in file App.s
Comment: irqhan used once
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

LIGHTS 00000000

Symbol: LIGHTS
   Definitions
      At line 120 in file App.s
   Uses
      At line 100 in file App.s
Comment: LIGHTS used once
lights 00000000

Symbol: lights
   Definitions
      At line 119 in file App.s
   Uses
      None
Comment: lights unused
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

IO0CLR E002800C

Symbol: IO0CLR
   Definitions
      At line 32 in file App.s
   Uses
      At line 48 in file App.s
Comment: IO0CLR used once
IO0DIR E0028008

Symbol: IO0DIR
   Definitions
      At line 30 in file App.s
   Uses
      At line 45 in file App.s
Comment: IO0DIR used once
IO0SET E0028004

Symbol: IO0SET
   Definitions
      At line 31 in file App.s
   Uses
      At line 50 in file App.s
Comment: IO0SET used once
IOPIN E0028000

Symbol: IOPIN
   Definitions
      At line 33 in file App.s
   Uses
      None
Comment: IOPIN unused
IR 00000000

Symbol: IR
   Definitions
      At line 8 in file App.s
   Uses
      At line 75 in file App.s
      At line 107 in file App.s

IRQslot_en 00000005

Symbol: IRQslot_en
   Definitions
      At line 28 in file App.s
   Uses
      At line 59 in file App.s
Comment: IRQslot_en used once
IntEnable 00000010

Symbol: IntEnable
   Definitions
      At line 21 in file App.s
   Uses
      At line 63 in file App.s
Comment: IntEnable used once
MCR 00000014




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

Symbol: MCR
   Definitions
      At line 10 in file App.s
   Uses
      At line 81 in file App.s
Comment: MCR used once
MR0 00000018

Symbol: MR0
   Definitions
      At line 11 in file App.s
   Uses
      At line 78 in file App.s
Comment: MR0 used once
T0 E0004000

Symbol: T0
   Definitions
      At line 5 in file App.s
   Uses
      At line 69 in file App.s
      At line 105 in file App.s

T1 E0008000

Symbol: T1
   Definitions
      At line 6 in file App.s
   Uses
      None
Comment: T1 unused
TCR 00000004

Symbol: TCR
   Definitions
      At line 9 in file App.s
   Uses
      At line 72 in file App.s
      At line 84 in file App.s

Timer0ChannelNumber 00000004

Symbol: Timer0ChannelNumber
   Definitions
      At line 26 in file App.s
   Uses
      At line 27 in file App.s
      At line 59 in file App.s

Timer0Mask 00000010

Symbol: Timer0Mask
   Definitions
      At line 27 in file App.s
   Uses
      At line 62 in file App.s
Comment: Timer0Mask used once
TimerCommandReset 00000002




ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

Symbol: TimerCommandReset
   Definitions
      At line 13 in file App.s
   Uses
      At line 71 in file App.s
Comment: TimerCommandReset used once
TimerCommandRun 00000001

Symbol: TimerCommandRun
   Definitions
      At line 14 in file App.s
   Uses
      At line 83 in file App.s
Comment: TimerCommandRun used once
TimerModeResetAndInterrupt 00000003

Symbol: TimerModeResetAndInterrupt
   Definitions
      At line 15 in file App.s
   Uses
      At line 80 in file App.s
Comment: TimerModeResetAndInterrupt used once
TimerResetAllInterrupts 000000FF

Symbol: TimerResetAllInterrupts
   Definitions
      At line 17 in file App.s
   Uses
      At line 74 in file App.s
Comment: TimerResetAllInterrupts used once
TimerResetTimer0Interrupt 00000001

Symbol: TimerResetTimer0Interrupt
   Definitions
      At line 16 in file App.s
   Uses
      At line 106 in file App.s
Comment: TimerResetTimer0Interrupt used once
VIC FFFFF000

Symbol: VIC
   Definitions
      At line 20 in file App.s
   Uses
      At line 54 in file App.s
      At line 110 in file App.s

VectAddr 00000030

Symbol: VectAddr
   Definitions
      At line 22 in file App.s
   Uses
      At line 66 in file App.s
      At line 112 in file App.s

VectAddr0 00000100

Symbol: VectAddr0



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 23 in file App.s
   Uses
      At line 57 in file App.s
Comment: VectAddr0 used once
VectCtrl0 00000200

Symbol: VectCtrl0
   Definitions
      At line 24 in file App.s
   Uses
      At line 60 in file App.s
Comment: VectCtrl0 used once
23 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

main 00000000

Symbol: main
   Definitions
      At line 37 in file App.s
   Uses
      None
Comment: main unused
1 symbol
368 symbols in table
