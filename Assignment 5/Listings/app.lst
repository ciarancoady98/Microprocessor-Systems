


ARM Macro Assembler    Page 1 


    1 00000000         ; Definitions  -- references to 'UM' are to the User Man
                       ual.
    2 00000000         
    3 00000000         ; Timer Stuff -- UM, Table 173
    4 00000000         
    5 00000000 E0004000 
                       T0      equ              0xE0004000  ; Timer 0 Base Addr
                                                            ess
    6 00000000 E0008000 
                       T1      equ              0xE0008000
    7 00000000         
    8 00000000 00000000 
                       IR      equ              0           ; Add this to a tim
                                                            er's base address t
                                                            o get actual regist
                                                            er address
    9 00000000 00000004 
                       TCR     equ              4
   10 00000000 00000014 
                       MCR     equ              0x14
   11 00000000 00000018 
                       MR0     equ              0x18
   12 00000000         
   13 00000000 00000002 
                       TimerCommandReset
                               equ              2
   14 00000000 00000001 
                       TimerCommandRun
                               equ              1
   15 00000000 00000003 
                       TimerModeResetAndInterrupt
                               equ              3
   16 00000000 00000001 
                       TimerResetTimer0Interrupt
                               equ              1
   17 00000000 000000FF 
                       TimerResetAllInterrupts
                               equ              0xFF
   18 00000000         
   19 00000000         ; VIC Stuff -- UM, Table 41
   20 00000000 FFFFF000 
                       VIC     equ              0xFFFFF000  ; VIC Base Address
   21 00000000 00000010 
                       IntEnable
                               equ              0x10
   22 00000000 00000030 
                       VectAddr
                               equ              0x30
   23 00000000 00000100 
                       VectAddr0
                               equ              0x100
   24 00000000 00000200 
                       VectCtrl0
                               equ              0x200
   25 00000000         
   26 00000000 00000004 
                       Timer0ChannelNumber
                               equ              4           ; UM, Table 63
   27 00000000 00000010 



ARM Macro Assembler    Page 2 


                       Timer0Mask
                               equ              1<<Timer0ChannelNumber 
                                                            ; UM, Table 63
   28 00000000 00000005 
                       IRQslot_en
                               equ              5           ; UM, Table 58
   29 00000000         
   30 00000000 E0028018 
                       IO1DIR  EQU              0xE0028018
   31 00000000 E0028014 
                       IO1SET  EQU              0xE0028014
   32 00000000 E002801C 
                       IO1CLR  EQU              0xE002801C
   33 00000000         
   34 00000000 E0028008 
                       IO0DIR  EQU              0xE0028008
   35 00000000 E0028004 
                       IO0SET  EQU              0XE0028004
   36 00000000 E002800C 
                       IO0CLR  EQU              0XE002800C
   37 00000000 E0028000 
                       IO0PIN  EQU              0XE0028000
   38 00000000         
   39 00000000                 AREA             InitialisationAndMain, CODE, RE
ADONLY
   40 00000000                 IMPORT           main
   41 00000000         
   42 00000000         ; (c) Mike Brady, 2014 -- 2019.
   43 00000000         
   44 00000000                 EXPORT           start
   45 00000000         start
   46 00000000         ; initialisation code
   47 00000000         
   48 00000000         ; Initialise the VIC
   49 00000000 E59F0050        ldr              r0,=VIC     ; looking at you, V
                                                            IC!
   50 00000004         
   51 00000004 E59F1050        ldr              r1,=irqhan
   52 00000008 E5801100        str              r1,[r0,#VectAddr0] ; associate 
                                                            our interrupt handl
                                                            er with Vectored In
                                                            terrupt 0
   53 0000000C         
   54 0000000C E3A01024        mov              r1,#Timer0ChannelNumber+(1<<IRQ
slot_en)
   55 00000010 E5801200        str              r1,[r0,#VectCtrl0] ; make Timer
                                                             0 interrupts the s
                                                            ource of Vectored I
                                                            nterrupt 0
   56 00000014         
   57 00000014 E3A01010        mov              r1,#Timer0Mask
   58 00000018 E5801010        str              r1,[r0,#IntEnable] ; enable Tim
                                                            er 0 interrupts to 
                                                            be recognised by th
                                                            e VIC
   59 0000001C         
   60 0000001C E3A01000        mov              r1,#0
   61 00000020 E5801030        str              r1,[r0,#VectAddr] ; remove any 
                                                            pending interrupt (



ARM Macro Assembler    Page 3 


                                                            may not be needed)
   62 00000024         
   63 00000024         ; Initialise Timer 0
   64 00000024 E59F0034        ldr              r0,=T0      ; looking at you, T
                                                            imer 0!
   65 00000028         
   66 00000028 E3A01002        mov              r1,#TimerCommandReset
   67 0000002C E5801004        str              r1,[r0,#TCR]
   68 00000030         
   69 00000030 E3A010FF        mov              r1,#TimerResetAllInterrupts
   70 00000034 E5801000        str              r1,[r0,#IR]
   71 00000038         
   72 00000038 E59F1024        ldr              r1,=(14745600/200)-1 ; 5 ms = 1
                                                            /200 second
   73 0000003C E5801018        str              r1,[r0,#MR0]
   74 00000040         
   75 00000040 E3A01003        mov              r1,#TimerModeResetAndInterrupt
   76 00000044 E5801014        str              r1,[r0,#MCR]
   77 00000048         
   78 00000048 E3A01001        mov              r1,#TimerCommandRun
   79 0000004C E5801004        str              r1,[r0,#TCR]
   80 00000050         
   81 00000050         ;stack stuff 
   82 00000050 EAFFFFFE        b                irqhan
   83 00000054 EAFFFFFE 
                       initLoop
                               B                initLoop
   84 00000058         
   85 00000058         ;thread 0
   86 00000058 FFFFF000 
              00000000 
              E0004000 
              00011FFF         AREA             blinky0, CODE, READONLY
   87 00000000         
   88 00000000         startBlinky0
   89 00000000 E59F103C        ldr              r1,=IO1DIR
   90 00000004 E3A0280F        ldr              r2,=0x000f0000 ;select P1.19--P
                                                            1.16
   91 00000008 E5812000        str              r2,[r1]     ;make them outputs
   92 0000000C         
   93 0000000C         
   94 0000000C E59F1034        ldr              r1,=IO1SET
   95 00000010 E5812000        str              r2,[r1]     ;set them to turn t
                                                            he LEDs off
   96 00000014 E59F2030        ldr              r2,=IO1CLR
   97 00000018         ; r1 points to the SET register
   98 00000018         ; r2 points to the CLEAR register
   99 00000018         floop
  100 00000018 E3A00801        ldr              r0,=0x00010000 ;select P1.19--P
                                                            1.16
  101 0000001C E5820000        str              r0, [r2]
  102 00000020         ;delay for about a half second
  103 00000020         ;ldr r4,=4000000
  104 00000020 E3A04001        ldr              r4,=1
  105 00000024 E2544001 
                       dloop   subs             r4,r4,#1
  106 00000028 1AFFFFFD        bne              dloop
  107 0000002C         
  108 0000002C E5810000        str              r0, [r1]



ARM Macro Assembler    Page 4 


  109 00000030         ;delay for about a half second
  110 00000030 E3A04001        ldr              r4,=1
  111 00000034 E2544001 
                       dloop2  subs             r4,r4,#1
  112 00000038 1AFFFFFD        bne              dloop2
  113 0000003C EAFFFFFE        b                irqhan
  114 00000040 EAFFFFF4        b                floop
  115 00000044         
  116 00000044         ;end blinky1
  117 00000044         
  118 00000044         
  119 00000044         ;thread 1
  120 00000044 E0028018 
              E0028014 
              E002801C         AREA             blinky1, CODE, READONLY
  121 00000000         
  122 00000000         startBlinky1
  123 00000000         
  124 00000000 E59F103C        ldr              r1,=IO0DIR
  125 00000004 E3A02826        ldr              r2,=0X00260000 ;select P1.19--P
                                                            1.16
  126 00000008 E5812000        str              r2,[r1]     ;make them outputs
  127 0000000C         
  128 0000000C         
  129 0000000C E59F1034        ldr              r1,=IO0SET
  130 00000010 E5812000        str              r2,[r1]     ;set them to turn t
                                                            he LEDs off
  131 00000014 E59F2030        ldr              r2,=IO0CLR
  132 00000018         
  133 00000018         
  134 00000018         ; r1 points to the SET register
  135 00000018         ; r2 points to the CLEAR register
  136 00000018         floopb2
  137 00000018 E3A00602        ldr              r0,=0X00200000 ;select P1.19--P
                                                            1.16
  138 0000001C E5820000        str              r0, [r2]
  139 00000020         ;delay for about a half second
  140 00000020 E3A04001        ldr              r4,=1
  141 00000024 E2544001 
                       dloopb2 subs             r4,r4,#1
  142 00000028 1AFFFFFD        bne              dloopb2
  143 0000002C         
  144 0000002C E5810000        str              r0, [r1]
  145 00000030         ;delay for about a half second
  146 00000030 E3A04001        ldr              r4,=1
  147 00000034 E2544001 
                       dloopb22
                               subs             r4,r4,#1
  148 00000038 1AFFFFFD        bne              dloopb22
  149 0000003C EAFFFFFE        b                irqhan
  150 00000040 EAFFFFF4        b                floopb2
  151 00000044         
  152 00000044         ;end blinky 2
  153 00000044         
  154 00000044         ;interrupt stuff
  155 00000044 E0028008 
              E0028004 
              E002800C         AREA             InterruptStuff, CODE, READONLY
  156 00000000         irqhan



ARM Macro Assembler    Page 5 


  157 00000000 E24EE004        sub              lr,lr,#4
  158 00000004 E92D5FFF        stmfd            sp!,{r0-r12,lr} ; the lr will b
                                                            e restored to the p
                                                            c
  159 00000008         
  160 00000008         ;this is the body of the interrupt handler
  161 00000008         ;switching threads
  162 00000008 E59F0174        ldr              r0, =CURRENTTHREAD
  163 0000000C E5901000        ldr              r1, [r0]
  164 00000010 E3710001        cmp              r1, #-1
  165 00000014 0A000003        beq              initialSwitch
  166 00000018 E3510000        cmp              r1, #0
  167 0000001C 0A000039        beq              switchTo1
  168 00000020 E3510001        cmp              r1, #1
  169 00000024 0A000022        beq              switchTo0
  170 00000028         
  171 00000028         initialSwitch
  172 00000028         ;initialise starting values for both threads
  173 00000028 E59F1154        ldr              r1, =CURRENTTHREAD
  174 0000002C E3A02000        ldr              r2, =0
  175 00000030 E5812000        str              r2, [r1]    ;set thread 0 as ac
                                                            tive
  176 00000034         
  177 00000034         ;intialise stacks
  178 00000034 E59F014C        ldr              r0, =THREAD0STACK
  179 00000038         ;sub r0, r0, #200 ; get the top of the stack
  180 00000038 E59F114C        ldr              r1, =THREAD0SP
  181 0000003C E5810000        str              r0, [r1]
  182 00000040         
  183 00000040 E59F0148        ldr              r0, =THREAD1STACK
  184 00000044         ;sub r0, r0, #200 ; get the top of the stack
  185 00000044 E59F1148        ldr              r1, =THREAD1SP
  186 00000048 E5810000        str              r0, [r1]
  187 0000004C         
  188 0000004C E3A01000        ldr              r1, =0
  189 00000050 E5801000        str              r1, [r0]
  190 00000054 E59F213C        LDR              R2, =INITIALISATIONCOUNT
  191 00000058 E5923000        LDR              R3, [R2]
  192 0000005C E2833001        ADD              R3, R3, #1
  193 00000060 E5823000        STR              R3, [R2]
  194 00000064 E10F0000        mrs              r0, cpsr
  195 00000068         ;ldr r1, =0xFFFFFFE0
  196 00000068         ;and r0, r0, r1
  197 00000068         ;ldr r1, =0x00000010
  198 00000068         ;orr r0, r0, r1
  199 00000068         
  200 00000068 E59F412C        ldr              r4, =THREAD0CPSR
  201 0000006C E5840000        str              r0, [r4]
  202 00000070 E59F4128        ldr              r4, =THREAD1CPSR
  203 00000074 E5840000        str              r0, [r4]
  204 00000078         
  205 00000078 E59F3128        ldr              r3, =startBlinky1
  206 0000007C E1A0E003        mov              lr, r3
  207 00000080 E59F411C        ldr              r4, =THREAD1PC
  208 00000084 E5843000        str              r3, [r4]
  209 00000088         
  210 00000088 E59F4104        ldr              r4, =THREAD1SP
  211 0000008C E1A0D004        mov              sp, r4
  212 00000090 E92D5FFF        stmfd            sp!,{r0-r12,lr}



ARM Macro Assembler    Page 6 


  213 00000094 E584D000        str              sp, [r4]
  214 00000098         
  215 00000098 E59F3114        ldr              r3, =startBlinky0
  216 0000009C E1A0E003        mov              lr, r3
  217 000000A0         
  218 000000A0 E59F40E4        ldr              r4, =THREAD0SP
  219 000000A4 E1A0D004        mov              sp, r4
  220 000000A8 E92D5FFF        stmfd            sp!,{r0-r12,lr}
  221 000000AC E584D000        str              sp, [r4]
  222 000000B0         
  223 000000B0 EA000029        B                restoreContext
  224 000000B4         
  225 000000B4         switchTo0
  226 000000B4         
  227 000000B4         ;set this thread as the new active thread
  228 000000B4 E59F10C8        ldr              r1, =CURRENTTHREAD
  229 000000B8 E3A02000        ldr              r2, =0
  230 000000BC E5812000        str              r2, [r1]    ;set thread 0 as ac
                                                            tive
  231 000000C0         
  232 000000C0         ;spsr -> thread 1 cpsr
  233 000000C0 E59F30D8        ldr              r3, =THREAD1CPSR
  234 000000C4 E14F4000        mrs              r4, spsr
  235 000000C8 E5834000        str              r4, [r3]
  236 000000CC         
  237 000000CC         ;save thread 1 stuff to its stack and memory
  238 000000CC E59F50D0        ldr              r5, =THREAD1PC
  239 000000D0 E585E000        str              lr, [r5]
  240 000000D4 E8BD5FFF        ldmfd            sp!,{r0-r12,lr}
  241 000000D8 E59F50B4        ldr              r5, =THREAD1SP
  242 000000DC E59DD000        ldr              sp, [sp]
  243 000000E0 E92D5FFF        stmfd            sp!,{r0-r12,lr}
  244 000000E4 E585D000        str              sp, [r5]
  245 000000E8         
  246 000000E8         
  247 000000E8         ;restore thread 0 pc
  248 000000E8 E59FE0BC        ldr              lr, =THREAD0PC
  249 000000EC E59EE000        ldr              lr, [lr]
  250 000000F0         
  251 000000F0         ;restore thread 0 sp
  252 000000F0 E59FD094        ldr              sp, =THREAD0SP
  253 000000F4 E59DD000        ldr              sp, [sp]
  254 000000F8         
  255 000000F8         ;restore cpsr to spsr
  256 000000F8 E59F009C        ldr              r0, =THREAD0CPSR
  257 000000FC E5900000        ldr              r0, [r0]
  258 00000100 E16FF000        msr              spsr_cxsf, r0
  259 00000104         
  260 00000104 EA000014        b                restoreContext
  261 00000108         
  262 00000108         switchTo1
  263 00000108         ;set this thread as the new active thread
  264 00000108 E59F1074        ldr              r1, =CURRENTTHREAD
  265 0000010C E3A02001        ldr              r2, =1
  266 00000110 E5812000        str              r2, [r1]    ;set thread 1 as ac
                                                            tive
  267 00000114         
  268 00000114         ;spsr -> thread 0 cpsr
  269 00000114 E59F3080        ldr              r3, =THREAD0CPSR



ARM Macro Assembler    Page 7 


  270 00000118 E14F4000        mrs              r4, spsr
  271 0000011C E5834000        str              r4, [r3]
  272 00000120         
  273 00000120         ;save thread 0 stuff to its stack and memory
  274 00000120 E59F5084        ldr              r5, =THREAD0PC
  275 00000124 E585E000        str              lr, [r5]
  276 00000128 E8BD5FFF        ldmfd            sp!,{r0-r12,lr}
  277 0000012C E59F5058        ldr              r5, =THREAD0SP
  278 00000130 E595D000        ldr              sp, [r5]
  279 00000134 E92D5FFF        stmfd            sp!,{r0-r12,lr}
  280 00000138 E585D000        str              sp, [r5]
  281 0000013C         
  282 0000013C         
  283 0000013C         
  284 0000013C         ;restore thread 1 pc
  285 0000013C E59FE060        ldr              lr, =THREAD1PC
  286 00000140 E59EE000        ldr              lr, [lr]
  287 00000144         
  288 00000144         ;restore thread 1 sp
  289 00000144 E59FD048        ldr              sp, =THREAD1SP
  290 00000148 E59DD000        ldr              sp, [sp]
  291 0000014C         
  292 0000014C         ;restore cpsr to spsr
  293 0000014C E59F004C        ldr              r0, =THREAD1CPSR
  294 00000150 E5900000        ldr              r0, [r0]
  295 00000154 E16FF000        msr              spsr_cxsf, r0
  296 00000158         
  297 00000158 EAFFFFFF        b                restoreContext
  298 0000015C         
  299 0000015C         restoreContext
  300 0000015C         
  301 0000015C         ;this is where we stop the timer from making the interru
                       pt request to the VIC
  302 0000015C         ;i.e. we 'acknowledge' the interrupt
  303 0000015C E59F0090        ldr              r0,=T0
  304 00000160 E3A01001        mov              r1,#TimerResetTimer0Interrupt
  305 00000164 E5801000        str              r1,[r0,#IR] ; remove MR0 interr
                                                            upt request from ti
                                                            mer
  306 00000168         
  307 00000168         ;here we stop the VIC from making the interrupt request 
                       to the CPU:
  308 00000168 E59F0088        ldr              r0,=VIC
  309 0000016C E3A01000        mov              r1,#0
  310 00000170 E5801030        str              r1,[r0,#VectAddr] ; reset VIC
  311 00000174         
  312 00000174         
  313 00000174         ;restore context
  314 00000174         ;at this point the lr, sp and cpsr are ready for the thr
                       ead we are switching to
  315 00000174 E14F0000        mrs              r0, spsr
  316 00000178 E12FF000        msr              cpsr_cxsf, r0
  317 0000017C         ;restore thread registers
  318 0000017C E8BD5FFF        ldmfd            sp!,{r0-r12,lr}
  319 00000180 E12FFF1E        bx               lr
  320 00000184         
  321 00000184         
  322 00000184 00000000 
              00000000 



ARM Macro Assembler    Page 8 


              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              E0004000 
              FFFFF000         AREA             processStorage, READWRITE
  323 00000000 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 



ARM Macro Assembler    Page 9 


              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 



ARM Macro Assembler    Page 10 


              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00       THREAD0STACK
                               SPACE            400
  324 00000190 00 00 00 
              00       THREAD0PC
                               SPACE            4
  325 00000194 00 00 00 
              00       THREAD0SP
                               SPACE            4
  326 00000198 00 00 00 
              00       THREAD0CPSR
                               SPACE            4
  327 0000019C         
  328 0000019C 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 



ARM Macro Assembler    Page 11 


              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 



ARM Macro Assembler    Page 12 


              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 



ARM Macro Assembler    Page 13 


              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00       THREAD1STACK
                               SPACE            400
  329 0000032C 00 00 00 
              00       THREAD1PC
                               SPACE            4
  330 00000330 00 00 00 
              00       THREAD1SP
                               SPACE            4
  331 00000334 00 00 00 
              00       THREAD1CPSR
                               SPACE            4
  332 00000338         
  333 00000338 FFFFFFFF 
                       CURRENTTHREAD
                               DCD              -1
  334 0000033C         
  335 0000033C 00000000 
                       INITIALISATIONCOUNT
                               DCD              0
  336 00000340                 END
Command Line: --debug --xref --diag_suppress=9931 --apcs=interwork --depend=.\a
pp.d -o.\app.o -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Ke
il_v5\ARM\Inc\Philips --predefine="__EVAL SETA 1" --predefine="__MICROLIB SETA 
1" --predefine="__UVISION_VERSION SETA 516" --list=.\listings\app.lst App.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

InitialisationAndMain 00000000

Symbol: InitialisationAndMain
   Definitions
      At line 39 in file App.s
   Uses
      None
Comment: InitialisationAndMain unused
initLoop 00000054

Symbol: initLoop
   Definitions
      At line 83 in file App.s
   Uses
      At line 83 in file App.s
Comment: initLoop used once
start 00000000

Symbol: start
   Definitions
      At line 45 in file App.s
   Uses
      At line 44 in file App.s
Comment: start used once
3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

blinky0 00000000

Symbol: blinky0
   Definitions
      At line 86 in file App.s
   Uses
      None
Comment: blinky0 unused
dloop 00000024

Symbol: dloop
   Definitions
      At line 105 in file App.s
   Uses
      At line 106 in file App.s
Comment: dloop used once
dloop2 00000034

Symbol: dloop2
   Definitions
      At line 111 in file App.s
   Uses
      At line 112 in file App.s
Comment: dloop2 used once
floop 00000018

Symbol: floop
   Definitions
      At line 99 in file App.s
   Uses
      At line 114 in file App.s
Comment: floop used once
startBlinky0 00000000

Symbol: startBlinky0
   Definitions
      At line 88 in file App.s
   Uses
      At line 215 in file App.s
Comment: startBlinky0 used once
5 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

blinky1 00000000

Symbol: blinky1
   Definitions
      At line 120 in file App.s
   Uses
      None
Comment: blinky1 unused
dloopb2 00000024

Symbol: dloopb2
   Definitions
      At line 141 in file App.s
   Uses
      At line 142 in file App.s
Comment: dloopb2 used once
dloopb22 00000034

Symbol: dloopb22
   Definitions
      At line 147 in file App.s
   Uses
      At line 148 in file App.s
Comment: dloopb22 used once
floopb2 00000018

Symbol: floopb2
   Definitions
      At line 136 in file App.s
   Uses
      At line 150 in file App.s
Comment: floopb2 used once
startBlinky1 00000000

Symbol: startBlinky1
   Definitions
      At line 122 in file App.s
   Uses
      At line 205 in file App.s
Comment: startBlinky1 used once
5 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

InterruptStuff 00000000

Symbol: InterruptStuff
   Definitions
      At line 155 in file App.s
   Uses
      None
Comment: InterruptStuff unused
initialSwitch 00000028

Symbol: initialSwitch
   Definitions
      At line 171 in file App.s
   Uses
      At line 165 in file App.s
Comment: initialSwitch used once
irqhan 00000000

Symbol: irqhan
   Definitions
      At line 156 in file App.s
   Uses
      At line 51 in file App.s
      At line 82 in file App.s
      At line 113 in file App.s
      At line 149 in file App.s

restoreContext 0000015C

Symbol: restoreContext
   Definitions
      At line 299 in file App.s
   Uses
      At line 223 in file App.s
      At line 260 in file App.s
      At line 297 in file App.s

switchTo0 000000B4

Symbol: switchTo0
   Definitions
      At line 225 in file App.s
   Uses
      At line 169 in file App.s
Comment: switchTo0 used once
switchTo1 00000108

Symbol: switchTo1
   Definitions
      At line 262 in file App.s
   Uses
      At line 167 in file App.s
Comment: switchTo1 used once
6 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

CURRENTTHREAD 00000338

Symbol: CURRENTTHREAD
   Definitions
      At line 333 in file App.s
   Uses
      At line 162 in file App.s
      At line 173 in file App.s
      At line 228 in file App.s
      At line 264 in file App.s

INITIALISATIONCOUNT 0000033C

Symbol: INITIALISATIONCOUNT
   Definitions
      At line 335 in file App.s
   Uses
      At line 190 in file App.s
Comment: INITIALISATIONCOUNT used once
THREAD0CPSR 00000198

Symbol: THREAD0CPSR
   Definitions
      At line 326 in file App.s
   Uses
      At line 200 in file App.s
      At line 256 in file App.s
      At line 269 in file App.s

THREAD0PC 00000190

Symbol: THREAD0PC
   Definitions
      At line 324 in file App.s
   Uses
      At line 248 in file App.s
      At line 274 in file App.s

THREAD0SP 00000194

Symbol: THREAD0SP
   Definitions
      At line 325 in file App.s
   Uses
      At line 180 in file App.s
      At line 218 in file App.s
      At line 252 in file App.s
      At line 277 in file App.s

THREAD0STACK 00000000

Symbol: THREAD0STACK
   Definitions
      At line 323 in file App.s
   Uses
      At line 178 in file App.s
Comment: THREAD0STACK used once
THREAD1CPSR 00000334




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Symbol: THREAD1CPSR
   Definitions
      At line 331 in file App.s
   Uses
      At line 202 in file App.s
      At line 233 in file App.s
      At line 293 in file App.s

THREAD1PC 0000032C

Symbol: THREAD1PC
   Definitions
      At line 329 in file App.s
   Uses
      At line 207 in file App.s
      At line 238 in file App.s
      At line 285 in file App.s

THREAD1SP 00000330

Symbol: THREAD1SP
   Definitions
      At line 330 in file App.s
   Uses
      At line 185 in file App.s
      At line 210 in file App.s
      At line 241 in file App.s
      At line 289 in file App.s

THREAD1STACK 0000019C

Symbol: THREAD1STACK
   Definitions
      At line 328 in file App.s
   Uses
      At line 183 in file App.s
Comment: THREAD1STACK used once
processStorage 00000000

Symbol: processStorage
   Definitions
      At line 322 in file App.s
   Uses
      None
Comment: processStorage unused
11 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

IO0CLR E002800C

Symbol: IO0CLR
   Definitions
      At line 36 in file App.s
   Uses
      At line 131 in file App.s
Comment: IO0CLR used once
IO0DIR E0028008

Symbol: IO0DIR
   Definitions
      At line 34 in file App.s
   Uses
      At line 124 in file App.s
Comment: IO0DIR used once
IO0PIN E0028000

Symbol: IO0PIN
   Definitions
      At line 37 in file App.s
   Uses
      None
Comment: IO0PIN unused
IO0SET E0028004

Symbol: IO0SET
   Definitions
      At line 35 in file App.s
   Uses
      At line 129 in file App.s
Comment: IO0SET used once
IO1CLR E002801C

Symbol: IO1CLR
   Definitions
      At line 32 in file App.s
   Uses
      At line 96 in file App.s
Comment: IO1CLR used once
IO1DIR E0028018

Symbol: IO1DIR
   Definitions
      At line 30 in file App.s
   Uses
      At line 89 in file App.s
Comment: IO1DIR used once
IO1SET E0028014

Symbol: IO1SET
   Definitions
      At line 31 in file App.s
   Uses
      At line 94 in file App.s
Comment: IO1SET used once
IR 00000000

Symbol: IR



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 8 in file App.s
   Uses
      At line 70 in file App.s
      At line 305 in file App.s

IRQslot_en 00000005

Symbol: IRQslot_en
   Definitions
      At line 28 in file App.s
   Uses
      At line 54 in file App.s
Comment: IRQslot_en used once
IntEnable 00000010

Symbol: IntEnable
   Definitions
      At line 21 in file App.s
   Uses
      At line 58 in file App.s
Comment: IntEnable used once
MCR 00000014

Symbol: MCR
   Definitions
      At line 10 in file App.s
   Uses
      At line 76 in file App.s
Comment: MCR used once
MR0 00000018

Symbol: MR0
   Definitions
      At line 11 in file App.s
   Uses
      At line 73 in file App.s
Comment: MR0 used once
T0 E0004000

Symbol: T0
   Definitions
      At line 5 in file App.s
   Uses
      At line 64 in file App.s
      At line 303 in file App.s

T1 E0008000

Symbol: T1
   Definitions
      At line 6 in file App.s
   Uses
      None
Comment: T1 unused
TCR 00000004

Symbol: TCR
   Definitions



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

      At line 9 in file App.s
   Uses
      At line 67 in file App.s
      At line 79 in file App.s

Timer0ChannelNumber 00000004

Symbol: Timer0ChannelNumber
   Definitions
      At line 26 in file App.s
   Uses
      At line 27 in file App.s
      At line 54 in file App.s

Timer0Mask 00000010

Symbol: Timer0Mask
   Definitions
      At line 27 in file App.s
   Uses
      At line 57 in file App.s
Comment: Timer0Mask used once
TimerCommandReset 00000002

Symbol: TimerCommandReset
   Definitions
      At line 13 in file App.s
   Uses
      At line 66 in file App.s
Comment: TimerCommandReset used once
TimerCommandRun 00000001

Symbol: TimerCommandRun
   Definitions
      At line 14 in file App.s
   Uses
      At line 78 in file App.s
Comment: TimerCommandRun used once
TimerModeResetAndInterrupt 00000003

Symbol: TimerModeResetAndInterrupt
   Definitions
      At line 15 in file App.s
   Uses
      At line 75 in file App.s
Comment: TimerModeResetAndInterrupt used once
TimerResetAllInterrupts 000000FF

Symbol: TimerResetAllInterrupts
   Definitions
      At line 17 in file App.s
   Uses
      At line 69 in file App.s
Comment: TimerResetAllInterrupts used once
TimerResetTimer0Interrupt 00000001

Symbol: TimerResetTimer0Interrupt
   Definitions
      At line 16 in file App.s



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Absolute symbols

   Uses
      At line 304 in file App.s
Comment: TimerResetTimer0Interrupt used once
VIC FFFFF000

Symbol: VIC
   Definitions
      At line 20 in file App.s
   Uses
      At line 49 in file App.s
      At line 308 in file App.s

VectAddr 00000030

Symbol: VectAddr
   Definitions
      At line 22 in file App.s
   Uses
      At line 61 in file App.s
      At line 310 in file App.s

VectAddr0 00000100

Symbol: VectAddr0
   Definitions
      At line 23 in file App.s
   Uses
      At line 52 in file App.s
Comment: VectAddr0 used once
VectCtrl0 00000200

Symbol: VectCtrl0
   Definitions
      At line 24 in file App.s
   Uses
      At line 55 in file App.s
Comment: VectCtrl0 used once
26 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

main 00000000

Symbol: main
   Definitions
      At line 40 in file App.s
   Uses
      None
Comment: main unused
1 symbol
398 symbols in table
