


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             Assignment2, CODE, READONLY
    2 00000000                 IMPORT           main
    3 00000000         
    4 00000000         ; sample program makes the 4 LEDs P1.16, P1.17, P1.18, P
                       1.19 go on and off in sequence
    5 00000000         ; (c) Mike Brady, 2011 -- 2019.
    6 00000000         
    7 00000000                 EXPORT           start
    8 00000000         start
    9 00000000         
   10 00000000         ;Setup pin addresses
   11 00000000         ;IO1DIR EQU 0xE0028018
   12 00000000         ;IO1SET EQU 0xE0028014
   13 00000000         ;IO1CLR EQU 0xE002801C
   14 00000000         ;
   15 00000000         ; ldr r1,=IO1DIR
   16 00000000         ; ldr r2,=0x000f0000 ;select P1.19--P1.16
   17 00000000         ; str r2,[r1]  ;make them outputs
   18 00000000         ; ldr r1,=IO1SET
   19 00000000         ; str r2,[r1]  ;set them to turn the LEDs off
   20 00000000         ; ldr r2,=IO1CLR
   21 00000000         ; r1 points to the SET register
   22 00000000         ; r2 points to the CLEAR register
   23 00000000         
   24 00000000         ; ldr r5,=0x00100000 ; end when the mask reaches this va
                       lue
   25 00000000         ;wloop ldr r3,=0x00010000 ; start with P1.16.
   26 00000000         ;floop str r3,[r2]     ; clear the bit -> turn on the LE
                       D
   27 00000000         
   28 00000000         ;delay for about a half second
   29 00000000         ; ldr r4,=4000000
   30 00000000         ;dloop subs r4,r4,#1
   31 00000000         ; bne dloop
   32 00000000         
   33 00000000         ; str r3,[r1]  ;set the bit -> turn off the LED
   34 00000000         ; mov r3,r3,lsl #1 ;shift up to next bit. P1.16 -> P1.17
                        etc.
   35 00000000         ; cmp r3,r5
   36 00000000         ; bne floop
   37 00000000         ; b wloop
   38 00000000         
   39 00000000         ;
   40 00000000         ;
   41 00000000         ;
   42 00000000         ;
   43 00000000         ;
   44 00000000         ;
   45 00000000         ;
   46 00000000         
   47 00000000 E59F0064        ldr              r0, =0x0000101B
   48 00000004 E59F1064        ldr              r1, =ASCIIREPRESENTATION
   49 00000008 E59F2064        ldr              r2, =DIVISORTABLE
   50 0000000C EB000000        BL               getDecimal
   51 00000010         
   52 00000010         
   53 00000010         
   54 00000010 EAFFFFFE 
                       stop    B                stop



ARM Macro Assembler    Page 2 


   55 00000014         
   56 00000014         
   57 00000014         
   58 00000014         ;Convert to Decimal Subroutine
   59 00000014         ;Converts a Unsigned interger to its decimal digits
   60 00000014         ;and saves it in memory
   61 00000014         ;
   62 00000014         ;R0 - number being converted
   63 00000014         ;R1 - memory address of space for decimal digits
   64 00000014         ;R2 - memory address of divisor table
   65 00000014         ;
   66 00000014         
   67 00000014         getDecimal
   68 00000014 E92D41F8        stmfd            SP!, {lr, r3-r8} ; Store regist
                                                            ers to stack
   69 00000018         
   70 00000018 E3A04000        ldr              r4, =0      ; Divisor table ind
                                                            ex = 0;
   71 0000001C         for
   72 0000001C E354000A        cmp              r4, #10     ; for(index < divis
                                                            orTable.length){
   73 00000020 AA00000E        bge              endfor
   74 00000024 E5923000        ldr              r3, [r2]    ; load value at div
                                                            isor table
   75 00000028         if1
   76 00000028 E1500003        cmp              r0, r3      ; if(numberBeingCon
                                                            verted >= divisor){
                                                            
   77 0000002C BA000008        blt              endif1
   78 00000030 E3A05000        ldr              r5, =0      ; digitCount = 0;
   79 00000034         while
   80 00000034 E1500003        cmp              r0, r3      ; while(numberBeing
                                                            Converted >= diviso
                                                            r){
   81 00000038 BA000002        blt              endwh
   82 0000003C E0400003        sub              r0, r0, r3  ; numberBeingConver
                                                            ted -= divisor
   83 00000040 E2855001        add              r5, r5, #1  ; digitCount++
   84 00000044 EAFFFFFA        b                while
   85 00000048         endwh
   86 00000048         ;put decimal number into memory
   87 00000048 E5815000        str              r5, [r1]    ; store digit to me
                                                            mory space
   88 0000004C E3A05000        ldr              r5, =0      ; digitCount = 0
   89 00000050 E2811004        add              r1, r1, #4  ; digitAddress++
   90 00000054         endif1
   91 00000054 E2844001        add              r4, r4, #1  ; index++
   92 00000058 E2822004        add              r2, r2, #4  ; divisorTableAddre
                                                            ss++
   93 0000005C EAFFFFEE        b                for
   94 00000060         endfor
   95 00000060         ;terminate the string
   96 00000060 E3E05000        ldr              r5, =-1     ; load -1 as termin
                                                            ating character   
   97 00000064 E5815000        str              r5, [r1]    ; store to digitAdd
                                                            ress
   98 00000068 E8BD81F8        ldmfd            SP!, {pc, r3-r8}
   99 0000006C         
  100 0000006C 0000101B 



ARM Macro Assembler    Page 3 


              00000000 
              00000000         AREA             Table, DATA, READONLY
  101 00000000         
  102 00000000         DIVISORTABLE
  103 00000000 3B9ACA00        DCD              1000000000
  104 00000004 05F5E100        DCD              100000000
  105 00000008 00989680        DCD              10000000
  106 0000000C 000F4240        DCD              1000000
  107 00000010 000186A0        DCD              100000
  108 00000014 00002710        DCD              10000
  109 00000018 000003E8        DCD              1000
  110 0000001C 00000064        DCD              100
  111 00000020 0000000A        DCD              10
  112 00000024 00000001        DCD              1
  113 00000028         
  114 00000028                 AREA             AsciiConversion, READWRITE
  115 00000000         
  116 00000000 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 ASCIIREPRESENTATION
                               SPACE            12
  117 0000000C         
  118 0000000C                 END
Command Line: --debug --xref --diag_suppress=9931 --apcs=interwork --depend=.\a
pp.d -o.\app.o -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Ke
il_v5\ARM\INC\Philips --predefine="__EVAL SETA 1" --predefine="__MICROLIB SETA 
1" --predefine="__UVISION_VERSION SETA 526" --list=.\listings\app.lst App.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

Assignment2 00000000

Symbol: Assignment2
   Definitions
      At line 1 in file App.s
   Uses
      None
Comment: Assignment2 unused
endfor 00000060

Symbol: endfor
   Definitions
      At line 94 in file App.s
   Uses
      At line 73 in file App.s
Comment: endfor used once
endif1 00000054

Symbol: endif1
   Definitions
      At line 90 in file App.s
   Uses
      At line 77 in file App.s
Comment: endif1 used once
endwh 00000048

Symbol: endwh
   Definitions
      At line 85 in file App.s
   Uses
      At line 81 in file App.s
Comment: endwh used once
for 0000001C

Symbol: for
   Definitions
      At line 71 in file App.s
   Uses
      At line 93 in file App.s
Comment: for used once
getDecimal 00000014

Symbol: getDecimal
   Definitions
      At line 67 in file App.s
   Uses
      At line 50 in file App.s
Comment: getDecimal used once
if1 00000028

Symbol: if1
   Definitions
      At line 75 in file App.s
   Uses
      None
Comment: if1 unused
start 00000000

Symbol: start



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 8 in file App.s
   Uses
      At line 7 in file App.s
Comment: start used once
stop 00000010

Symbol: stop
   Definitions
      At line 54 in file App.s
   Uses
      At line 54 in file App.s
Comment: stop used once
while 00000034

Symbol: while
   Definitions
      At line 79 in file App.s
   Uses
      At line 84 in file App.s
Comment: while used once
10 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DIVISORTABLE 00000000

Symbol: DIVISORTABLE
   Definitions
      At line 102 in file App.s
   Uses
      At line 49 in file App.s
Comment: DIVISORTABLE used once
Table 00000000

Symbol: Table
   Definitions
      At line 100 in file App.s
   Uses
      None
Comment: Table unused
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

ASCIIREPRESENTATION 00000000

Symbol: ASCIIREPRESENTATION
   Definitions
      At line 116 in file App.s
   Uses
      At line 48 in file App.s
Comment: ASCIIREPRESENTATION used once
AsciiConversion 00000000

Symbol: AsciiConversion
   Definitions
      At line 114 in file App.s
   Uses
      None
Comment: AsciiConversion unused
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

main 00000000

Symbol: main
   Definitions
      At line 2 in file App.s
   Uses
      None
Comment: main unused
1 symbol
350 symbols in table
